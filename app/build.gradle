apply plugin: 'com.android.application'

def config = rootProject.ext.configuration
def libs = rootProject.ext.library

android {
    compileSdkVersion config.compileSdk
    buildToolsVersion config.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        multiDexEnabled true

        manifestPlaceholders = [
                //个推参数
                GETUI_APP_ID    : "0MiL8F96kD9eRyTPb1XjF7",
                GETUI_APP_KEY   : "Ab5ewgbsS9AZD06hlf31E2",
                GETUI_APP_SECRET: "fpfjyNwNT38lXQbQEwOf49",
                PACKAGE_NAME    : applicationId
        ]
    }
    sourceSets {

        main {
            //jniLibs.srcDirs = ['jniLibs']
            res.srcDir "src/main/java/com/theaty/migao/cartModule/res"
        }
    }

    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword 'theaty'
            keyAlias 'release'
            keyPassword 'theaty'
        }
    }
    dexOptions {

        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            ndk {
                abiFilters "armeabi", "armeabi-v7a"
            }

            // minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            ndk {
                abiFilters "armeabi", "armeabi-v7a"
            }
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled true
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':umengshare')
    compile project(':commonlibrary')
    //    compile 'com.joanzapata.android:base-adapter-helper:1.1.11'
    compile "com.jakewharton:butterknife:${libs.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
    compile "com.android.support:support-v4:${libs.supportLibrary}"
    compile files('libs/Volley.jar')
    //    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    //    compile "com.android.support:support-v4:${libs.supportLibrary}"
    //    compile project(':alilive')
    //compile 'com.bigkoo:pickerview:2.1.1'
    compile files('libs/badgeview.jar')
//    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.blankj:utilcode:1.3.6'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.contrarywind:Android-PickerView:3.2.4'
    compile 'com.github.lovetuzitong:MultiImageSelector:1.2'
    compile 'com.malinskiy:superrecyclerview:1.1.3'
    compile 'com.github.Rukey7:TagLayout:1.0.4'
    compile 'com.getui:sdk:2.8.1.0'
    compile 'com.getui:ext:2.0.3'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
